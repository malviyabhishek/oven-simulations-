

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 25 12:54:19 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0008                     _PORTD	set	8
   231  0049                     _RE1	set	73
   232  004A                     _RE2	set	74
   233  0088                     _TRISD	set	136
   234  0449                     _TRISE1	set	1097
   235  044A                     _TRISE2	set	1098
   236                           
   237                           	psect	strings
   238  0003                     __pstrings:	
   239  0003                     stringtab:	
   240  0003                     __stringtab:	
   241  0003                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244  0003                     stringdir:	
   245  0003  3000               	movlw	high stringdir
   246  0004  008A               	movwf	10
   247  0005  0804               	movf	4,w
   248  0006  0A84               	incf	4,f
   249  0007  0782               	addwf	2,f
   250  0008                     __stringbase:	
   251  0008  3400               	retlw	0
   252  0009                     __end_of__stringtab:	
   253  0009                     STR_1:	
   254  0009  3457               	retlw	87	;'W'
   255  000A  346F               	retlw	111	;'o'
   256  000B  3472               	retlw	114	;'r'
   257  000C  346C               	retlw	108	;'l'
   258  000D  3464               	retlw	100	;'d'
   259  000E  3400               	retlw	0
   260                           
   261                           ; #config settings
   262  0000                     
   263                           	psect	cinit
   264  07FC                     start_initialization:	
   265  07FC                     __initialization:	
   266  07FC                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  07FC                     __end_of__initialization:	
   270  07FC  0183               	clrf	3
   271  07FD  120A  118A  2F1E   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	cstackCOMMON
   274  0070                     __pcstackCOMMON:	
   275  0070                     ?_clcd_write:	
   276  0070                     ?_init_display_controller:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_init_clcd:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_init_config:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     clcd_write@mode:	
   289                           ; 1 bytes @ 0x0
   290                           
   291                           
   292                           ; 1 bytes @ 0x0
   293  0070                     	ds	1
   294  0071                     ??_clcd_write:	
   295                           
   296                           ; 1 bytes @ 0x1
   297  0071                     	ds	2
   298  0073                     clcd_write@byte:	
   299                           
   300                           ; 1 bytes @ 0x3
   301  0073                     	ds	1
   302  0074                     ??_init_display_controller:	
   303  0074                     ?_clcd_putch:	
   304                           ; 1 bytes @ 0x4
   305                           
   306  0074                     ?_clcd_print:	
   307                           ; 1 bytes @ 0x4
   308                           
   309  0074                     clcd_putch@addr:	
   310                           ; 1 bytes @ 0x4
   311                           
   312  0074                     clcd_print@addr:	
   313                           ; 1 bytes @ 0x4
   314                           
   315                           
   316                           ; 1 bytes @ 0x4
   317  0074                     	ds	1
   318  0075                     ??_clcd_putch:	
   319  0075                     ??_clcd_print:	
   320                           ; 1 bytes @ 0x5
   321                           
   322  0075                     clcd_putch@data:	
   323                           ; 1 bytes @ 0x5
   324                           
   325                           
   326                           ; 1 bytes @ 0x5
   327  0075                     	ds	1
   328  0076                     ??_init_clcd:	
   329  0076                     ??_init_config:	
   330                           ; 1 bytes @ 0x6
   331                           
   332  0076                     clcd_print@str:	
   333                           ; 1 bytes @ 0x6
   334                           
   335                           
   336                           ; 1 bytes @ 0x6
   337  0076                     	ds	1
   338  0077                     ??_main:	
   339                           
   340                           ; 1 bytes @ 0x7
   341  0077                     	ds	1
   342                           
   343                           	psect	maintext
   344  071E                     __pmaintext:	
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 14 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          1       0       0       0       0
   367 ;;      Totals:         1       0       0       0       0
   368 ;;Total ram usage:        1 bytes
   369 ;; Hardware stack levels required when called:    4
   370 ;; This function calls:
   371 ;;		_clcd_print
   372 ;;		_clcd_putch
   373 ;;		_init_config
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _main
   381  071E                     _main:	
   382  071E                     l773:	
   383                           ;incstack = 0
   384                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   385                           
   386  071E  120A  118A  26FC  120A  118A  	fcall	_init_config
   387  0723                     l46:	
   388  0723  3084               	movlw	132
   389  0724  00F7               	movwf	??_main
   390  0725  0877               	movf	??_main,w
   391  0726  00F4               	movwf	clcd_putch@addr
   392  0727  3034               	movlw	52
   393  0728  120A  118A  270D  120A  118A  	fcall	_clcd_putch
   394  072D                     l775:	
   395  072D  30C4               	movlw	196
   396  072E  00F7               	movwf	??_main
   397  072F  0877               	movf	??_main,w
   398  0730  00F4               	movwf	clcd_print@addr
   399  0731  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   400  0732  120A  118A  273B  120A  118A  	fcall	_clcd_print
   401  0737  2F23               	goto	l46
   402  0738  120A  118A  2800   	ljmp	start
   403  073B                     __end_of_main:	
   404                           
   405                           	psect	text1
   406  06FC                     __ptext1:	
   407 ;; *************** function _init_config *****************
   408 ;; Defined at:
   409 ;;		line 10 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    3
   430 ;; This function calls:
   431 ;;		_init_clcd
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           
   438                           ;psect for function _init_config
   439  06FC                     _init_config:	
   440  06FC                     l771:	
   441                           ;incstack = 0
   442                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   443                           
   444                           
   445                           ;main.c: 11:     }
   446  06FC  120A  118A  2702  120A  118A  	fcall	_init_clcd
   447  0701                     l41:	
   448  0701  0008               	return
   449  0702                     __end_of_init_config:	
   450                           
   451                           	psect	text2
   452  0702                     __ptext2:	
   453 ;; *************** function _init_clcd *****************
   454 ;; Defined at:
   455 ;;		line 44 in file "clcd.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, pclath, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   469 ;;      Params:         0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    2
   476 ;; This function calls:
   477 ;;		_init_display_controller
   478 ;; This function is called by:
   479 ;;		_init_config
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           
   484                           ;psect for function _init_clcd
   485  0702                     _init_clcd:	
   486  0702                     l753:	
   487                           ;incstack = 0
   488                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   489                           
   490                           
   491                           ;clcd.c: 47:     TRISD = 0x00;
   492  0702  1683               	bsf	3,5	;RP0=1, select bank1
   493  0703  1303               	bcf	3,6	;RP1=0, select bank1
   494  0704  0188               	clrf	8	;volatile
   495  0705                     l755:	
   496                           
   497                           ;clcd.c: 50:     TRISE2 = 0;
   498  0705  1109               	bcf	9,2	;volatile
   499  0706                     l757:	
   500                           
   501                           ;clcd.c: 51:     TRISE1 = 0;
   502  0706  1089               	bcf	9,1	;volatile
   503  0707                     l759:	
   504                           
   505                           ;clcd.c: 53:     init_display_controller();
   506  0707  120A  118A  2799  120A  118A  	fcall	_init_display_controller
   507  070C                     l23:	
   508  070C  0008               	return
   509  070D                     __end_of_init_clcd:	
   510                           
   511                           	psect	text3
   512  0799                     __ptext3:	
   513 ;; *************** function _init_display_controller *****************
   514 ;; Defined at:
   515 ;;		line 21 in file "clcd.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          2       0       0       0       0
   532 ;;      Totals:         2       0       0       0       0
   533 ;;Total ram usage:        2 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; Hardware stack levels required when called:    1
   536 ;; This function calls:
   537 ;;		_clcd_write
   538 ;; This function is called by:
   539 ;;		_init_clcd
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _init_display_controller
   545  0799                     _init_display_controller:	
   546  0799                     l729:	
   547                           ;incstack = 0
   548                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   549                           
   550                           
   551                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
   552  0799  30C3               	movlw	195
   553  079A  00F5               	movwf	??_init_display_controller+1
   554  079B  30CD               	movlw	205
   555  079C  00F4               	movwf	??_init_display_controller
   556  079D                     u97:	
   557  079D  0BF4               	decfsz	??_init_display_controller,f
   558  079E  2F9D               	goto	u97
   559  079F  0BF5               	decfsz	??_init_display_controller+1,f
   560  07A0  2F9D               	goto	u97
   561  07A1                     l731:	
   562                           
   563                           ;clcd.c: 27:     clcd_write(0x33, 0);
   564  07A1  01F0               	clrf	clcd_write@mode
   565  07A2  3033               	movlw	51
   566  07A3  120A  118A  2763  120A  118A  	fcall	_clcd_write
   567  07A8                     l733:	
   568                           
   569                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   570  07A8  301B               	movlw	27
   571  07A9  00F5               	movwf	??_init_display_controller+1
   572  07AA  309E               	movlw	158
   573  07AB  00F4               	movwf	??_init_display_controller
   574  07AC                     u107:	
   575  07AC  0BF4               	decfsz	??_init_display_controller,f
   576  07AD  2FAC               	goto	u107
   577  07AE  0BF5               	decfsz	??_init_display_controller+1,f
   578  07AF  2FAC               	goto	u107
   579  07B0  0000               	nop
   580                           
   581                           ;clcd.c: 29:     clcd_write(0x33, 0);
   582  07B1  01F0               	clrf	clcd_write@mode
   583  07B2  3033               	movlw	51
   584  07B3  120A  118A  2763  120A  118A  	fcall	_clcd_write
   585  07B8                     l735:	
   586                           
   587                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   588  07B8  30A6               	movlw	166
   589  07B9  00F4               	movwf	??_init_display_controller
   590  07BA                     u117:	
   591  07BA  0BF4               	decfsz	??_init_display_controller,f
   592  07BB  2FBA               	goto	u117
   593  07BC  0000               	nop
   594  07BD                     l737:	
   595                           
   596                           ;clcd.c: 31:     clcd_write(0x33, 0);
   597  07BD  01F0               	clrf	clcd_write@mode
   598  07BE  3033               	movlw	51
   599  07BF  120A  118A  2763  120A  118A  	fcall	_clcd_write
   600  07C4                     l739:	
   601                           
   602                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   603  07C4  2FC5               	nop2	;2 cycle nop
   604  07C5  2FC6               	nop2	;2 cycle nop
   605  07C6  0000               	nop
   606  07C7                     l741:	
   607                           
   608                           ;clcd.c: 34:     clcd_write(0x02, 0);
   609  07C7  01F0               	clrf	clcd_write@mode
   610  07C8  3002               	movlw	2
   611  07C9  120A  118A  2763  120A  118A  	fcall	_clcd_write
   612  07CE                     l743:	
   613                           
   614                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   615  07CE  30A6               	movlw	166
   616  07CF  00F4               	movwf	??_init_display_controller
   617  07D0                     u127:	
   618  07D0  0BF4               	decfsz	??_init_display_controller,f
   619  07D1  2FD0               	goto	u127
   620  07D2  0000               	nop
   621                           
   622                           ;clcd.c: 36:     clcd_write(0x28, 0);
   623  07D3  01F0               	clrf	clcd_write@mode
   624  07D4  3028               	movlw	40
   625  07D5  120A  118A  2763  120A  118A  	fcall	_clcd_write
   626  07DA                     l745:	
   627                           
   628                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   629  07DA  30A6               	movlw	166
   630  07DB  00F4               	movwf	??_init_display_controller
   631  07DC                     u137:	
   632  07DC  0BF4               	decfsz	??_init_display_controller,f
   633  07DD  2FDC               	goto	u137
   634  07DE  0000               	nop
   635  07DF                     l747:	
   636                           
   637                           ;clcd.c: 38:     clcd_write(0x01, 0);
   638  07DF  01F0               	clrf	clcd_write@mode
   639  07E0  3001               	movlw	1
   640  07E1  120A  118A  2763  120A  118A  	fcall	_clcd_write
   641                           
   642                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   643  07E6  3004               	movlw	4
   644  07E7  00F5               	movwf	??_init_display_controller+1
   645  07E8  303D               	movlw	61
   646  07E9  00F4               	movwf	??_init_display_controller
   647  07EA                     u147:	
   648  07EA  0BF4               	decfsz	??_init_display_controller,f
   649  07EB  2FEA               	goto	u147
   650  07EC  0BF5               	decfsz	??_init_display_controller+1,f
   651  07ED  2FEA               	goto	u147
   652  07EE  2FEF               	nop2
   653  07EF                     l749:	
   654                           
   655                           ;clcd.c: 40:     clcd_write(0x0C, 0);
   656  07EF  01F0               	clrf	clcd_write@mode
   657  07F0  300C               	movlw	12
   658  07F1  120A  118A  2763  120A  118A  	fcall	_clcd_write
   659  07F6                     l751:	
   660                           
   661                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   662  07F6  30A6               	movlw	166
   663  07F7  00F4               	movwf	??_init_display_controller
   664  07F8                     u157:	
   665  07F8  0BF4               	decfsz	??_init_display_controller,f
   666  07F9  2FF8               	goto	u157
   667  07FA  0000               	nop
   668  07FB                     l20:	
   669  07FB  0008               	return
   670  07FC                     __end_of_init_display_controller:	
   671                           
   672                           	psect	text4
   673  070D                     __ptext4:	
   674 ;; *************** function _clcd_putch *****************
   675 ;; Defined at:
   676 ;;		line 56 in file "clcd.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  data            1    wreg     const unsigned char 
   679 ;;  addr            1    4[COMMON] unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  data            1    5[COMMON] const unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         1       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         2       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    1
   698 ;; This function calls:
   699 ;;		_clcd_write
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _clcd_putch
   707  070D                     _clcd_putch:	
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   711                           ;clcd_putch@data stored from wreg
   712  070D  00F5               	movwf	clcd_putch@data
   713  070E                     l761:	
   714                           
   715                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
   716  070E  01F0               	clrf	clcd_write@mode
   717  070F  0874               	movf	clcd_putch@addr,w
   718  0710  120A  118A  2763  120A  118A  	fcall	_clcd_write
   719                           
   720                           ;clcd.c: 59:     clcd_write(data, 1);
   721  0715  01F0               	clrf	clcd_write@mode
   722  0716  0AF0               	incf	clcd_write@mode,f
   723  0717  0875               	movf	clcd_putch@data,w
   724  0718  120A  118A  2763  120A  118A  	fcall	_clcd_write
   725  071D                     l26:	
   726  071D  0008               	return
   727  071E                     __end_of_clcd_putch:	
   728                           
   729                           	psect	text5
   730  073B                     __ptext5:	
   731 ;; *************** function _clcd_print *****************
   732 ;; Defined at:
   733 ;;		line 62 in file "clcd.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  str             1    wreg     PTR const unsigned char 
   736 ;;		 -> STR_1(6), 
   737 ;;  addr            1    4[COMMON] unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  str             1    6[COMMON] PTR const unsigned char 
   740 ;;		 -> STR_1(6), 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         1       0       0       0       0
   751 ;;      Locals:         1       0       0       0       0
   752 ;;      Temps:          1       0       0       0       0
   753 ;;      Totals:         3       0       0       0       0
   754 ;;Total ram usage:        3 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    1
   757 ;; This function calls:
   758 ;;		_clcd_write
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _clcd_print
   766  073B                     _clcd_print:	
   767                           
   768                           ;incstack = 0
   769                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   770                           ;clcd_print@str stored from wreg
   771  073B  00F6               	movwf	clcd_print@str
   772  073C                     l763:	
   773                           
   774                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
   775  073C  01F0               	clrf	clcd_write@mode
   776  073D  0874               	movf	clcd_print@addr,w
   777  073E  120A  118A  2763  120A  118A  	fcall	_clcd_write
   778                           
   779                           ;clcd.c: 66:     while (*str != '\0')
   780  0743  2F56               	goto	l769
   781  0744                     l765:	
   782                           
   783                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
   784  0744  01F0               	clrf	clcd_write@mode
   785  0745  0AF0               	incf	clcd_write@mode,f
   786  0746  0876               	movf	clcd_print@str,w
   787  0747  0084               	movwf	4
   788  0748  120A  118A  2003  120A  118A  	fcall	stringdir
   789  074D  120A  118A  2763  120A  118A  	fcall	_clcd_write
   790  0752                     l767:	
   791                           
   792                           ;clcd.c: 69:         str++;
   793  0752  3001               	movlw	1
   794  0753  00F5               	movwf	??_clcd_print
   795  0754  0875               	movf	??_clcd_print,w
   796  0755  07F6               	addwf	clcd_print@str,f
   797  0756                     l769:	
   798                           
   799                           ;clcd.c: 66:     while (*str != '\0')
   800  0756  0876               	movf	clcd_print@str,w
   801  0757  0084               	movwf	4
   802  0758  120A  118A  2003  120A  118A  	fcall	stringdir
   803  075D  3A00               	xorlw	0
   804  075E  1D03               	skipz
   805  075F  2F61               	goto	u81
   806  0760  2F62               	goto	u80
   807  0761                     u81:	
   808  0761  2F44               	goto	l765
   809  0762                     u80:	
   810  0762                     l32:	
   811  0762  0008               	return
   812  0763                     __end_of_clcd_print:	
   813                           
   814                           	psect	text6
   815  0763                     __ptext6:	
   816 ;; *************** function _clcd_write *****************
   817 ;; Defined at:
   818 ;;		line 4 in file "clcd.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  byte            1    wreg     unsigned char 
   821 ;;  mode            1    0[COMMON] unsigned char 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  byte            1    3[COMMON] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         1       0       0       0       0
   834 ;;      Locals:         1       0       0       0       0
   835 ;;      Temps:          2       0       0       0       0
   836 ;;      Totals:         4       0       0       0       0
   837 ;;Total ram usage:        4 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_init_display_controller
   843 ;;		_clcd_putch
   844 ;;		_clcd_print
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _clcd_write
   850  0763                     _clcd_write:	
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
   854                           ;clcd_write@byte stored from wreg
   855  0763  00F3               	movwf	clcd_write@byte
   856  0764                     l709:	
   857                           
   858                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
   859  0764  1870               	btfsc	clcd_write@mode,0
   860  0765  2F67               	goto	u51
   861  0766  2F6B               	goto	u50
   862  0767                     u51:	
   863  0767  1283               	bcf	3,5	;RP0=0, select bank0
   864  0768  1303               	bcf	3,6	;RP1=0, select bank0
   865  0769  1509               	bsf	9,2	;volatile
   866  076A  2F6E               	goto	u64
   867  076B                     u50:	
   868  076B  1283               	bcf	3,5	;RP0=0, select bank0
   869  076C  1303               	bcf	3,6	;RP1=0, select bank0
   870  076D  1109               	bcf	9,2	;volatile
   871  076E                     u64:	
   872  076E                     l711:	
   873                           
   874                           ;clcd.c: 8:     PORTD = byte & 0xF0;
   875  076E  0873               	movf	clcd_write@byte,w
   876  076F  39F0               	andlw	240
   877  0770  0088               	movwf	8	;volatile
   878  0771                     l713:	
   879                           
   880                           ;clcd.c: 9:     RE1 = 1;
   881  0771  1489               	bsf	9,1	;volatile
   882  0772                     l715:	
   883                           
   884                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   885  0772  30A6               	movlw	166
   886  0773  00F1               	movwf	??_clcd_write
   887  0774                     u167:	
   888  0774  0BF1               	decfsz	??_clcd_write,f
   889  0775  2F74               	goto	u167
   890  0776  0000               	nop
   891  0777                     l717:	
   892                           
   893                           ;clcd.c: 11:     RE1 = 0;
   894  0777  1283               	bcf	3,5	;RP0=0, select bank0
   895  0778  1303               	bcf	3,6	;RP1=0, select bank0
   896  0779  1089               	bcf	9,1	;volatile
   897  077A                     l719:	
   898                           
   899                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
   900  077A  0873               	movf	clcd_write@byte,w
   901  077B  390F               	andlw	15
   902  077C  00F1               	movwf	??_clcd_write
   903  077D  3003               	movlw	3
   904  077E                     u75:	
   905  077E  1003               	clrc
   906  077F  0DF1               	rlf	??_clcd_write,f
   907  0780  3EFF               	addlw	-1
   908  0781  1D03               	skipz
   909  0782  2F7E               	goto	u75
   910  0783  1003               	clrc
   911  0784  0D71               	rlf	??_clcd_write,w
   912  0785  0088               	movwf	8	;volatile
   913  0786                     l721:	
   914                           
   915                           ;clcd.c: 14:     RE1 = 1;
   916  0786  1489               	bsf	9,1	;volatile
   917  0787                     l723:	
   918                           
   919                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   920  0787  30A6               	movlw	166
   921  0788  00F1               	movwf	??_clcd_write
   922  0789                     u177:	
   923  0789  0BF1               	decfsz	??_clcd_write,f
   924  078A  2F89               	goto	u177
   925  078B  0000               	nop
   926  078C                     l725:	
   927                           
   928                           ;clcd.c: 16:     RE1 = 0;
   929  078C  1283               	bcf	3,5	;RP0=0, select bank0
   930  078D  1303               	bcf	3,6	;RP1=0, select bank0
   931  078E  1089               	bcf	9,1	;volatile
   932  078F                     l727:	
   933                           
   934                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   935  078F  301B               	movlw	27
   936  0790  00F2               	movwf	??_clcd_write+1
   937  0791  309E               	movlw	158
   938  0792  00F1               	movwf	??_clcd_write
   939  0793                     u187:	
   940  0793  0BF1               	decfsz	??_clcd_write,f
   941  0794  2F93               	goto	u187
   942  0795  0BF2               	decfsz	??_clcd_write+1,f
   943  0796  2F93               	goto	u187
   944  0797  0000               	nop
   945  0798                     l17:	
   946  0798  0008               	return
   947  0799                     __end_of_clcd_write:	
   948  007E                     btemp	set	126	;btemp
   949  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3002
                                              7 COMMON     1     1      0
                         _clcd_print
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1022
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     2      1    1078
                                              4 COMMON     3     2      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 25 12:54:19 2021

                               pc 0002                    clcd_print@addr 0074  __size_of_init_display_controller 0063  
                              l20 07FB                                l23 070C                                l32 0762  
                              l17 0798                                l41 0701                                l26 071D  
                              l46 0723                                u50 076B                                u51 0767  
                              u64 076E                                u80 0762                                u81 0761  
                              u75 077E                                u97 079D                                fsr 0004  
                             l711 076E                               l721 0786                               l713 0771  
                             l723 0787                               l715 0772                               l731 07A1  
                             l725 078C                               l717 0777                               l709 0764  
                             l741 07C7                               l733 07A8                               l727 078F  
                             l719 077A                               l751 07F6                               l743 07CE  
                             l735 07B8                               l761 070E                               l745 07DA  
                             l737 07BD                               l729 0799                               l753 0702  
                             l763 073C                               l747 07DF                               l739 07C4  
                             l755 0705                               l771 06FC                               l765 0744  
                             l749 07EF                               l757 0706                               l773 071E  
                             l767 0752                               l759 0707                               l775 072D  
                             l769 0756                               _RE1 0049                               _RE2 004A  
                             u107 07AC                               u117 07BA                               u127 07D0  
                             u137 07DC                               u147 07EA                               u157 07F8  
                             u167 0774                               u177 0789                               u187 0793  
                  clcd_putch@addr 0074                               fsr0 0004                    clcd_putch@data 0075  
                            STR_1 0009                              _main 071E                              btemp 007E  
                            start 0000                    clcd_write@byte 0073                    clcd_write@mode 0070  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                      ?_init_config 0070  
                           _PORTD 0008                             _TRISD 0088                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 07FC  
                    __end_of_main 073B                            ??_main 0077                            _TRISE1 0449  
                          _TRISE2 044A           _init_display_controller 0799           __end_of__initialization 07FC  
                  __pcstackCOMMON 0070              __size_of_init_config 0006                __size_of_init_clcd 000B  
       ??_init_display_controller 0074                        _clcd_print 073B                        _clcd_putch 070D  
                      _clcd_write 0763                        __pmaintext 071E                        __stringtab 0003  
                         __ptext1 06FC                           __ptext2 0702                           __ptext3 0799  
                         __ptext4 070D                           __ptext5 073B                           __ptext6 0763  
 __end_of_init_display_controller 07FC                 __end_of_init_clcd 070D              end_of_initialization 07FC  
                     ?_clcd_print 0074                       ?_clcd_putch 0074                       ?_clcd_write 0070  
                   clcd_print@str 0076               start_initialization 07FC               __size_of_clcd_print 0028  
             __size_of_clcd_putch 0011               __size_of_clcd_write 0036                     ??_init_config 0076  
                       ___latbits 0002                         __pstrings 0003                         _init_clcd 0702  
             __end_of_init_config 0702          ?_init_display_controller 0070                      ??_clcd_print 0075  
                    ??_clcd_putch 0075                      ??_clcd_write 0071                       __stringbase 0008  
              __end_of_clcd_print 0763                __end_of_clcd_putch 071E                __end_of_clcd_write 0799  
                      ?_init_clcd 0070                __end_of__stringtab 0009                       _init_config 06FC  
                   __size_of_main 001D                       ??_init_clcd 0076                         stringcode 0003  
                        stringdir 0003                          stringtab 0003  
